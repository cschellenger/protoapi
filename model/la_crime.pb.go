// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: proto/la_crime.proto

package model

import (
	_ "github.com/srikrsna/protoc-gen-gotag/tagger"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrimeData struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ReportNumber         int32                  `protobuf:"varint,1,opt,name=report_number,json=reportNumber,proto3" json:"report_number,omitempty" db:"report_number"`
	DateReported         *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=date_reported,json=dateReported,proto3" json:"date_reported,omitempty" db:"date_reported"`
	DateOccurred         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=date_occurred,json=dateOccurred,proto3" json:"date_occurred,omitempty" db:"date_occurred"`
	TimeOccurred         string                 `protobuf:"bytes,4,opt,name=time_occurred,json=timeOccurred,proto3" json:"time_occurred,omitempty" db:"time_occurred"`
	Area                 string                 `protobuf:"bytes,5,opt,name=area,proto3" json:"area,omitempty" db:"area"`
	AreaName             string                 `protobuf:"bytes,6,opt,name=area_name,json=areaName,proto3" json:"area_name,omitempty" db:"area_name"`
	ReportDistrictNumber string                 `protobuf:"bytes,7,opt,name=report_district_number,json=reportDistrictNumber,proto3" json:"report_district_number,omitempty" db:"report_district_number"`
	Part_1_2             int32                  `protobuf:"varint,8,opt,name=part_1_2,json=part12,proto3" json:"part_1_2,omitempty" db:"part_1_2"`
	CrimeCode            int32                  `protobuf:"varint,9,opt,name=crime_code,json=crimeCode,proto3" json:"crime_code,omitempty" db:"crime_code"`
	CrimeCodeDescription string                 `protobuf:"bytes,10,opt,name=crime_code_description,json=crimeCodeDescription,proto3" json:"crime_code_description,omitempty" db:"crime_code_description"`
	Mocodes              string                 `protobuf:"bytes,11,opt,name=mocodes,proto3" json:"mocodes,omitempty" db:"mocodes"`
	VictimAge            int32                  `protobuf:"varint,12,opt,name=victim_age,json=victimAge,proto3" json:"victim_age,omitempty" db:"victim_age"`
	VictimSex            string                 `protobuf:"bytes,13,opt,name=victim_sex,json=victimSex,proto3" json:"victim_sex,omitempty" db:"victim_sex"`
	VictimDescent        string                 `protobuf:"bytes,14,opt,name=victim_descent,json=victimDescent,proto3" json:"victim_descent,omitempty" db:"victim_descent"`
	PremiseCode          int32                  `protobuf:"varint,15,opt,name=premise_code,json=premiseCode,proto3" json:"premise_code,omitempty" db:"premise_code"`
	PremiseDescription   string                 `protobuf:"bytes,16,opt,name=premise_description,json=premiseDescription,proto3" json:"premise_description,omitempty" db:"premise_description"`
	WeaponUsedCode       int32                  `protobuf:"varint,17,opt,name=weapon_used_code,json=weaponUsedCode,proto3" json:"weapon_used_code,omitempty" db:"weapon_used_code"`
	WeaponDescription    string                 `protobuf:"bytes,18,opt,name=weapon_description,json=weaponDescription,proto3" json:"weapon_description,omitempty" db:"weapon_description"`
	Status               string                 `protobuf:"bytes,19,opt,name=status,proto3" json:"status,omitempty" db:"status"`
	StatusDescription    string                 `protobuf:"bytes,20,opt,name=status_description,json=statusDescription,proto3" json:"status_description,omitempty" db:"status_description"`
	CrimeCode_1          int32                  `protobuf:"varint,21,opt,name=crime_code_1,json=crimeCode1,proto3" json:"crime_code_1,omitempty" db:"crime_code_1"`
	CrimeCode_2          int32                  `protobuf:"varint,22,opt,name=crime_code_2,json=crimeCode2,proto3" json:"crime_code_2,omitempty" db:"crime_code_2"`
	CrimeCode_3          int32                  `protobuf:"varint,23,opt,name=crime_code_3,json=crimeCode3,proto3" json:"crime_code_3,omitempty" db:"crime_code_3"`
	CrimeCode_4          int32                  `protobuf:"varint,24,opt,name=crime_code_4,json=crimeCode4,proto3" json:"crime_code_4,omitempty" db:"crime_code_4"`
	Location             string                 `protobuf:"bytes,25,opt,name=location,proto3" json:"location,omitempty" db:"location"`
	CrossStreet          string                 `protobuf:"bytes,26,opt,name=cross_street,json=crossStreet,proto3" json:"cross_street,omitempty" db:"cross_street"`
	Latitude             float64                `protobuf:"fixed64,27,opt,name=latitude,proto3" json:"latitude,omitempty" db:"latitude"`
	Longitude            float64                `protobuf:"fixed64,28,opt,name=longitude,proto3" json:"longitude,omitempty" db:"longitude"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CrimeData) Reset() {
	*x = CrimeData{}
	mi := &file_proto_la_crime_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrimeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrimeData) ProtoMessage() {}

func (x *CrimeData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_la_crime_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrimeData.ProtoReflect.Descriptor instead.
func (*CrimeData) Descriptor() ([]byte, []int) {
	return file_proto_la_crime_proto_rawDescGZIP(), []int{0}
}

func (x *CrimeData) GetReportNumber() int32 {
	if x != nil {
		return x.ReportNumber
	}
	return 0
}

func (x *CrimeData) GetDateReported() *timestamppb.Timestamp {
	if x != nil {
		return x.DateReported
	}
	return nil
}

func (x *CrimeData) GetDateOccurred() *timestamppb.Timestamp {
	if x != nil {
		return x.DateOccurred
	}
	return nil
}

func (x *CrimeData) GetTimeOccurred() string {
	if x != nil {
		return x.TimeOccurred
	}
	return ""
}

func (x *CrimeData) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *CrimeData) GetAreaName() string {
	if x != nil {
		return x.AreaName
	}
	return ""
}

func (x *CrimeData) GetReportDistrictNumber() string {
	if x != nil {
		return x.ReportDistrictNumber
	}
	return ""
}

func (x *CrimeData) GetPart_1_2() int32 {
	if x != nil {
		return x.Part_1_2
	}
	return 0
}

func (x *CrimeData) GetCrimeCode() int32 {
	if x != nil {
		return x.CrimeCode
	}
	return 0
}

func (x *CrimeData) GetCrimeCodeDescription() string {
	if x != nil {
		return x.CrimeCodeDescription
	}
	return ""
}

func (x *CrimeData) GetMocodes() string {
	if x != nil {
		return x.Mocodes
	}
	return ""
}

func (x *CrimeData) GetVictimAge() int32 {
	if x != nil {
		return x.VictimAge
	}
	return 0
}

func (x *CrimeData) GetVictimSex() string {
	if x != nil {
		return x.VictimSex
	}
	return ""
}

func (x *CrimeData) GetVictimDescent() string {
	if x != nil {
		return x.VictimDescent
	}
	return ""
}

func (x *CrimeData) GetPremiseCode() int32 {
	if x != nil {
		return x.PremiseCode
	}
	return 0
}

func (x *CrimeData) GetPremiseDescription() string {
	if x != nil {
		return x.PremiseDescription
	}
	return ""
}

func (x *CrimeData) GetWeaponUsedCode() int32 {
	if x != nil {
		return x.WeaponUsedCode
	}
	return 0
}

func (x *CrimeData) GetWeaponDescription() string {
	if x != nil {
		return x.WeaponDescription
	}
	return ""
}

func (x *CrimeData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CrimeData) GetStatusDescription() string {
	if x != nil {
		return x.StatusDescription
	}
	return ""
}

func (x *CrimeData) GetCrimeCode_1() int32 {
	if x != nil {
		return x.CrimeCode_1
	}
	return 0
}

func (x *CrimeData) GetCrimeCode_2() int32 {
	if x != nil {
		return x.CrimeCode_2
	}
	return 0
}

func (x *CrimeData) GetCrimeCode_3() int32 {
	if x != nil {
		return x.CrimeCode_3
	}
	return 0
}

func (x *CrimeData) GetCrimeCode_4() int32 {
	if x != nil {
		return x.CrimeCode_4
	}
	return 0
}

func (x *CrimeData) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CrimeData) GetCrossStreet() string {
	if x != nil {
		return x.CrossStreet
	}
	return ""
}

func (x *CrimeData) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CrimeData) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

var File_proto_la_crime_proto protoreflect.FileDescriptor

var file_proto_la_crime_proto_rawDesc = string([]byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6c, 0x61, 0x5f, 0x63, 0x72, 0x69, 0x6d, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13,
	0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc7, 0x0d, 0x0a, 0x09, 0x43, 0x72, 0x69, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x3c, 0x0a, 0x0d, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x64,
	0x62, 0x3a, 0x22, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x22, 0x52, 0x0c, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x58, 0x0a, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03, 0x12, 0x64, 0x62, 0x3a, 0x22, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x22, 0x52, 0x0c, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x58, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x17, 0x9a, 0x84,
	0x9e, 0x03, 0x12, 0x64, 0x62, 0x3a, 0x22, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6f, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x64, 0x22, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x64, 0x12, 0x3c, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x63, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x17, 0x9a, 0x84, 0x9e, 0x03,
	0x12, 0x64, 0x62, 0x3a, 0x22, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x6f, 0x63, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x64, 0x22, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x4f, 0x63, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x64, 0x12, 0x22, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0e, 0x9a, 0x84, 0x9e, 0x03, 0x09, 0x64, 0x62, 0x3a, 0x22, 0x61, 0x72, 0x65, 0x61, 0x22, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x30, 0x0a, 0x09, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x13, 0x9a, 0x84, 0x9e, 0x03, 0x0e, 0x64,
	0x62, 0x3a, 0x22, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x52, 0x08, 0x61,
	0x72, 0x65, 0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x20, 0x9a, 0x84, 0x9e, 0x03, 0x1b, 0x64, 0x62,
	0x3a, 0x22, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x52, 0x14, 0x72, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x74, 0x5f, 0x31, 0x5f, 0x32, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x12, 0x9a, 0x84, 0x9e, 0x03, 0x0d, 0x64, 0x62, 0x3a, 0x22, 0x70, 0x61, 0x72, 0x74,
	0x5f, 0x31, 0x5f, 0x32, 0x22, 0x52, 0x06, 0x70, 0x61, 0x72, 0x74, 0x31, 0x32, 0x12, 0x33, 0x0a,
	0x0a, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x14, 0x9a, 0x84, 0x9e, 0x03, 0x0f, 0x64, 0x62, 0x3a, 0x22, 0x63, 0x72, 0x69, 0x6d,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x52, 0x09, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x56, 0x0a, 0x16, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x20, 0x9a, 0x84, 0x9e, 0x03, 0x1b, 0x64, 0x62, 0x3a, 0x22, 0x63, 0x72, 0x69,
	0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x52, 0x14, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x6f,
	0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x11, 0x9a, 0x84, 0x9e,
	0x03, 0x0c, 0x64, 0x62, 0x3a, 0x22, 0x6d, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x52, 0x07,
	0x6d, 0x6f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x0a, 0x76, 0x69, 0x63, 0x74, 0x69,
	0x6d, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x42, 0x14, 0x9a, 0x84, 0x9e,
	0x03, 0x0f, 0x64, 0x62, 0x3a, 0x22, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x61, 0x67, 0x65,
	0x22, 0x52, 0x09, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x41, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x0a,
	0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x14, 0x9a, 0x84, 0x9e, 0x03, 0x0f, 0x64, 0x62, 0x3a, 0x22, 0x76, 0x69, 0x63, 0x74, 0x69,
	0x6d, 0x5f, 0x73, 0x65, 0x78, 0x22, 0x52, 0x09, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x53, 0x65,
	0x78, 0x12, 0x3f, 0x0a, 0x0e, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x42, 0x18, 0x9a, 0x84, 0x9e, 0x03, 0x13,
	0x64, 0x62, 0x3a, 0x22, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65,
	0x6e, 0x74, 0x22, 0x52, 0x0d, 0x76, 0x69, 0x63, 0x74, 0x69, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x65,
	0x6e, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x64,
	0x62, 0x3a, 0x22, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x52, 0x0b, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x73, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x4e, 0x0a,
	0x13, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1d, 0x9a, 0x84, 0x9e, 0x03,
	0x18, 0x64, 0x62, 0x3a, 0x22, 0x70, 0x72, 0x65, 0x6d, 0x69, 0x73, 0x65, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x12, 0x70, 0x72, 0x65, 0x6d, 0x69,
	0x73, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a,
	0x10, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x42, 0x1a, 0x9a, 0x84, 0x9e, 0x03, 0x15, 0x64, 0x62,
	0x3a, 0x22, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x52, 0x0e, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x64, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x1c, 0x9a, 0x84, 0x9e, 0x03, 0x17, 0x64, 0x62, 0x3a, 0x22, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x11, 0x77,
	0x65, 0x61, 0x70, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x28, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03, 0x0b, 0x64, 0x62, 0x3a, 0x22, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1c, 0x9a, 0x84, 0x9e, 0x03, 0x17, 0x64, 0x62, 0x3a,
	0x22, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x52, 0x11, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x6d, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x31, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x42, 0x16, 0x9a,
	0x84, 0x9e, 0x03, 0x11, 0x64, 0x62, 0x3a, 0x22, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x31, 0x22, 0x52, 0x0a, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x31, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x64, 0x62,
	0x3a, 0x22, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x32, 0x22, 0x52,
	0x0a, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x32, 0x12, 0x38, 0x0a, 0x0c, 0x63,
	0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x33, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x05, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x64, 0x62, 0x3a, 0x22, 0x63, 0x72, 0x69, 0x6d,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x33, 0x22, 0x52, 0x0a, 0x63, 0x72, 0x69, 0x6d, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x33, 0x12, 0x38, 0x0a, 0x0c, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x34, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x42, 0x16, 0x9a, 0x84, 0x9e,
	0x03, 0x11, 0x64, 0x62, 0x3a, 0x22, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x5f, 0x34, 0x22, 0x52, 0x0a, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x34, 0x12,
	0x2e, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x12, 0x9a, 0x84, 0x9e, 0x03, 0x0d, 0x64, 0x62, 0x3a, 0x22, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x39, 0x0a, 0x0c, 0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x16, 0x9a, 0x84, 0x9e, 0x03, 0x11, 0x64, 0x62, 0x3a, 0x22,
	0x63, 0x72, 0x6f, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x22, 0x52, 0x0b, 0x63,
	0x72, 0x6f, 0x73, 0x73, 0x53, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x01, 0x42, 0x12, 0x9a, 0x84,
	0x9e, 0x03, 0x0d, 0x64, 0x62, 0x3a, 0x22, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x22,
	0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x01, 0x42, 0x13, 0x9a,
	0x84, 0x9e, 0x03, 0x0e, 0x64, 0x62, 0x3a, 0x22, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64,
	0x65, 0x22, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x42, 0x09, 0x5a,
	0x07, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_proto_la_crime_proto_rawDescOnce sync.Once
	file_proto_la_crime_proto_rawDescData []byte
)

func file_proto_la_crime_proto_rawDescGZIP() []byte {
	file_proto_la_crime_proto_rawDescOnce.Do(func() {
		file_proto_la_crime_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_la_crime_proto_rawDesc), len(file_proto_la_crime_proto_rawDesc)))
	})
	return file_proto_la_crime_proto_rawDescData
}

var file_proto_la_crime_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_proto_la_crime_proto_goTypes = []any{
	(*CrimeData)(nil),             // 0: model.CrimeData
	(*timestamppb.Timestamp)(nil), // 1: google.protobuf.Timestamp
}
var file_proto_la_crime_proto_depIdxs = []int32{
	1, // 0: model.CrimeData.date_reported:type_name -> google.protobuf.Timestamp
	1, // 1: model.CrimeData.date_occurred:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_la_crime_proto_init() }
func file_proto_la_crime_proto_init() {
	if File_proto_la_crime_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_la_crime_proto_rawDesc), len(file_proto_la_crime_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_la_crime_proto_goTypes,
		DependencyIndexes: file_proto_la_crime_proto_depIdxs,
		MessageInfos:      file_proto_la_crime_proto_msgTypes,
	}.Build()
	File_proto_la_crime_proto = out.File
	file_proto_la_crime_proto_goTypes = nil
	file_proto_la_crime_proto_depIdxs = nil
}
